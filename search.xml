<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于Qt5.15的CRC校验小工具开发项目</title>
      <link href="/2020/09/0416107.html"/>
      <url>/2020/09/0416107.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><font>        近期用到CRC校验算法，网上搜索很多示例都有问题，所以研究了一下基于Qt写了个CRC校验小工具。</font><hr style=" border:solid; width:100px; height:1px;" color="#000000" size="1&quot;"><h2 id="一、开发准备"><a href="#一、开发准备" class="headerlink" title="一、开发准备"></a>一、开发准备</h2><ul><li>开发环境：Windows10（开始基于Mac开发，感觉Mac系统下Qt的适配性不如Windows好，最终选择万能的Windows）</li><li>Qt基础：掌握信号与槽，UI界面，Qt资源文件等</li><li>C++基础：构造与析构函数，类的继承，数组与指针，正则表达式，初始化列表等</li><li>CRC算法（基于多项式的CRC8、CRC16和CRC32）</li></ul><h2 id="二、开发流程"><a href="#二、开发流程" class="headerlink" title="二、开发流程"></a>二、开发流程</h2><h3 id="1-Qt配置与界面设置"><a href="#1-Qt配置与界面设置" class="headerlink" title="1.Qt配置与界面设置"></a>1.Qt配置与界面设置</h3><ul><li>新建项目-&gt;选择Qt Widgets Application-&gt;选择QWidget基类-&gt;勾选Generate form（注意：勾选后才能生成.ui后缀文件，才能手动拖控件）</li></ul><p><img src="https://img-blog.csdnimg.cn/20200903204849725.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTU0OTE2MQ==,size_16,color_FFFFFF,t_70#pic_center" alt="Qt配置"></p><ul><li><p>项目树如下图所示，只需要修改画圈的文件，项目树介绍：</p><p>1.==crcTools.pro==：项目配置文件，这个一般会自动配置，不需要管，引入Qt所用到的核心库以及项目文件。<br>2.==main.cpp==：主进程循环文件，一般不需要变动。<br>3.==mywidget.h==和==mywidget.cpp==：需要你去编程的两个主要继承类文件，用于写你的方法和算法。<br>4.==mywidget.ui==：用于推拽控件的UI界面。<br>5.==images.qrc==：Qt的资源文件，用于存储图片等资源信息。</p></li></ul><p><img src="https://img-blog.csdnimg.cn/20200903210853668.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTU0OTE2MQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><ul><li><font color="#999AAA">双击生成的myWidget.ui文件，便可进入控件拖拽UI界面，最终如下图所示UI分为数据输入区，算法设置区和结果校验区。<br><img src="https://img-blog.csdnimg.cn/20200903210010554.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTU0OTE2MQ==,size_16,color_FFFFFF,t_70#pic_center" alt="CRC小工具界面"><h3 id="2-控件基本配置"><a href="#2-控件基本配置" class="headerlink" title="2.控件基本配置"></a>2.控件基本配置</h3></font></li><font color="#999AAA"><li>自定义myWidget类继承自基类QWidget，其中QWidget类又继承于QObject类。</li><li>this指针指向ui界面，<strong>通过this指针获取ui界面的控件</strong>。</li><li>界面标题设置通过setWindowTitle函数，其中要注意加入<strong>QString::fromLocal8Bit</strong>用于本地字符GB到Unicode转换，<strong>解决中文乱码问题</strong>；其他控件初始化设置如下面程序可得。</li><li><strong>信号与槽</strong>通过connect函数连接，比如计算按钮的点击事件函数会响应CRC校验算法函数进行计算，可以将一个connect函数看作一个事件响应过程，包括四个事件（<strong>算法选择事件，复制校验码事件，CRC算法计算事件和界面清空事件</strong>）。<br><img src="https://img-blog.csdnimg.cn/20200903223255442.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTU0OTE2MQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li></font></ul><font color="#999AAA"><pre class=" language-cpp"><code class="language-cpp">myWidget<span class="token operator">::</span><span class="token function">myWidget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span>    <span class="token operator">:</span> <span class="token function">QWidget</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>    <span class="token punctuation">,</span> <span class="token function">ui</span><span class="token punctuation">(</span><span class="token keyword">new</span> Ui<span class="token operator">::</span>myWidget<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span><span class="token function">setupUi</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//UI参数设置</span>    <span class="token keyword">this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setWindowTitle</span><span class="token punctuation">(</span>QString<span class="token operator">::</span><span class="token function">fromLocal8Bit</span><span class="token punctuation">(</span><span class="token string">"CRC小工具"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setWindowIcon</span><span class="token punctuation">(</span><span class="token function">QIcon</span><span class="token punctuation">(</span><span class="token string">":/images/C:/Users/Administrator/Pictures/icon/yang16.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setFixedSize</span><span class="token punctuation">(</span><span class="token number">581</span><span class="token punctuation">,</span><span class="token number">281</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//算法UI列表初始化,共16个算法</span>    QStringList CRCList<span class="token punctuation">;</span>    CRCList<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    CRCList <span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC8"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC8/ITU"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC8/ROHC"</span><span class="token punctuation">)</span>            <span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC8/MAXIM"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC16/IBM"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC16/MAXIM"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC16/USB"</span><span class="token punctuation">)</span>            <span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC16/MODBUS"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC16/CCITT"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC16/CCITT-FALSE"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC16/X25"</span><span class="token punctuation">)</span>            <span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC16/XMODEM"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC16/DNP"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC32"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">"CRC32/MPEG-2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>comboBox<span class="token operator">-</span><span class="token operator">></span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>comboBox<span class="token operator">-</span><span class="token operator">></span><span class="token function">addItems</span><span class="token punctuation">(</span>CRCList<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">crcSelectInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//算法选择初始化</span>    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-</span><span class="token operator">></span>comboBox<span class="token punctuation">,</span><span class="token function">SIGNAL</span><span class="token punctuation">(</span><span class="token function">currentIndexChanged</span><span class="token punctuation">(</span>QString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token function">SLOT</span><span class="token punctuation">(</span><span class="token function">crcSelectInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//点击清空事件</span>    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-</span><span class="token operator">></span>pushButton_3<span class="token punctuation">,</span><span class="token function">SIGNAL</span><span class="token punctuation">(</span><span class="token function">clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token function">SLOT</span><span class="token punctuation">(</span><span class="token function">allClearEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//复制校验码</span>    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-</span><span class="token operator">></span>pushButton<span class="token punctuation">,</span><span class="token function">SIGNAL</span><span class="token punctuation">(</span><span class="token function">clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token function">SLOT</span><span class="token punctuation">(</span><span class="token function">copyCheckCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//计算CRC事件</span>    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-</span><span class="token operator">></span>pushButton_2<span class="token punctuation">,</span><span class="token function">SIGNAL</span><span class="token punctuation">(</span><span class="token function">clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token function">SLOT</span><span class="token punctuation">(</span><span class="token function">crcCalculate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="3-CRC算法介绍"><a href="#3-CRC算法介绍" class="headerlink" title="3.CRC算法介绍"></a>3.CRC算法介绍</h3><ul><li>CRC校验（循环冗余校验）是数据通讯中最常采用的校验方式，就是将需要校验的数据与多项式进行循环异或（XOR），将得到的校验码附在数据末尾发送出去。</li><li>常见CRC多项式参数模型参考CRC在线校验工具<a href="http://www.ip33.com/crc.html">CRC在线校验工具</a>。</li><li>CRC算法参数模型解释：<br> 1.POLY：多项式的简写，以16进制表示。例如：CRC-32即是0x04C11DB7，忽略了最高位的”1”，即完整的生成项是0x104C11DB7。<br> 2.INIT：这是算法开始时寄存器（crc）的初始化预置值，十六进制表示。<br> 3.REFIN：输入数据每个字节是否反转。<br> 4.REFOUT：计算输出之后，异或输出之前，得到的数据进行反转。<br> 5.XOROUT：计算结果与该参数异或得到最终的CRC校验码。</li></ul><p><img src="https://img-blog.csdnimg.cn/20200903232256658.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTU0OTE2MQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="4-信号与槽的四个响应事件"><a href="#4-信号与槽的四个响应事件" class="headerlink" title="4.信号与槽的四个响应事件"></a>4.信号与槽的四个响应事件</h3><ul><li>算法初始化响应事件，界面开始运行时的参数指向设置。</li></ul><pre class=" language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">//算法选择初始化函数</span><span class="token comment" spellcheck="true">//算法参数peizhi</span>QString myWidget<span class="token operator">::</span>crcName<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">"CRC8"</span><span class="token punctuation">,</span><span class="token string">"CRC8/ITU"</span><span class="token punctuation">,</span><span class="token string">"CRC8/ROHC"</span><span class="token punctuation">,</span><span class="token string">"CRC8/MAXIM"</span><span class="token punctuation">,</span><span class="token string">"CRC16/IBM"</span><span class="token punctuation">,</span><span class="token string">"CRC16/MAXIM"</span><span class="token punctuation">,</span><span class="token string">"CRC16/USB"</span><span class="token punctuation">,</span><span class="token string">"CRC16/MODBUS"</span><span class="token punctuation">,</span><span class="token string">"CRC16/CCITT"</span><span class="token punctuation">,</span>                             <span class="token string">"CRC16/CCITT-FALSE"</span><span class="token punctuation">,</span><span class="token string">"CRC16/X25"</span><span class="token punctuation">,</span><span class="token string">"CRC16/XMODEM"</span><span class="token punctuation">,</span><span class="token string">"CRC16/DNP"</span><span class="token punctuation">,</span><span class="token string">"CRC32"</span><span class="token punctuation">,</span><span class="token string">"CRC32/MPEG-2"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>QString myWidget<span class="token operator">::</span>crcPoly<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">"07"</span><span class="token punctuation">,</span><span class="token string">"07"</span><span class="token punctuation">,</span><span class="token string">"07"</span><span class="token punctuation">,</span><span class="token string">"31"</span><span class="token punctuation">,</span><span class="token string">"8005"</span><span class="token punctuation">,</span><span class="token string">"8005"</span><span class="token punctuation">,</span><span class="token string">"8005"</span><span class="token punctuation">,</span><span class="token string">"8005"</span><span class="token punctuation">,</span><span class="token string">"1021"</span><span class="token punctuation">,</span><span class="token string">"1021"</span><span class="token punctuation">,</span><span class="token string">"1021"</span><span class="token punctuation">,</span><span class="token string">"1021"</span><span class="token punctuation">,</span><span class="token string">"3D65"</span><span class="token punctuation">,</span><span class="token string">"04C11DB7"</span><span class="token punctuation">,</span><span class="token string">"04C11DB7"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>QString myWidget<span class="token operator">::</span>crcInit<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">"00"</span><span class="token punctuation">,</span><span class="token string">"00"</span><span class="token punctuation">,</span><span class="token string">"FF"</span><span class="token punctuation">,</span><span class="token string">"00"</span><span class="token punctuation">,</span><span class="token string">"0000"</span><span class="token punctuation">,</span><span class="token string">"0000"</span><span class="token punctuation">,</span><span class="token string">"FFFF"</span><span class="token punctuation">,</span><span class="token string">"FFFF"</span><span class="token punctuation">,</span><span class="token string">"0000"</span><span class="token punctuation">,</span><span class="token string">"FFFF"</span><span class="token punctuation">,</span><span class="token string">"FFFF"</span><span class="token punctuation">,</span><span class="token string">"0000"</span><span class="token punctuation">,</span><span class="token string">"0000"</span><span class="token punctuation">,</span><span class="token string">"FFFFFFFF"</span><span class="token punctuation">,</span><span class="token string">"FFFFFFFF"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>QString myWidget<span class="token operator">::</span>crcXout<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">"00"</span><span class="token punctuation">,</span><span class="token string">"55"</span><span class="token punctuation">,</span><span class="token string">"00"</span><span class="token punctuation">,</span><span class="token string">"00"</span><span class="token punctuation">,</span><span class="token string">"0000"</span><span class="token punctuation">,</span><span class="token string">"FFFF"</span><span class="token punctuation">,</span><span class="token string">"FFFF"</span><span class="token punctuation">,</span><span class="token string">"0000"</span><span class="token punctuation">,</span><span class="token string">"0000"</span><span class="token punctuation">,</span><span class="token string">"0000"</span><span class="token punctuation">,</span><span class="token string">"FFFF"</span><span class="token punctuation">,</span><span class="token string">"0000"</span><span class="token punctuation">,</span><span class="token string">"FFFF"</span><span class="token punctuation">,</span><span class="token string">"FFFFFFFF"</span><span class="token punctuation">,</span><span class="token string">"00000000"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">bool</span> myWidget<span class="token operator">::</span>inputReverse<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">bool</span> myWidget<span class="token operator">::</span>outputReverse<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">void</span> myWidget<span class="token operator">::</span><span class="token function">crcSelectInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> tempCRC <span class="token operator">=</span> ui<span class="token operator">-</span><span class="token operator">></span>comboBox<span class="token operator">-</span><span class="token operator">></span><span class="token function">currentIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//qDebug()&lt;&lt;"算法检索位："&lt;&lt;tempCRC;</span>    ui<span class="token operator">-</span><span class="token operator">></span>lineEdit_2<span class="token operator">-</span><span class="token operator">></span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">QString</span><span class="token punctuation">(</span>myWidget<span class="token operator">::</span>crcPoly<span class="token punctuation">[</span>tempCRC<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>lineEdit_3<span class="token operator">-</span><span class="token operator">></span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">QString</span><span class="token punctuation">(</span>myWidget<span class="token operator">::</span>crcInit<span class="token punctuation">[</span>tempCRC<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>lineEdit_4<span class="token operator">-</span><span class="token operator">></span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">QString</span><span class="token punctuation">(</span>myWidget<span class="token operator">::</span>crcXout<span class="token punctuation">[</span>tempCRC<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>checkBox<span class="token operator">-</span><span class="token operator">></span><span class="token function">setChecked</span><span class="token punctuation">(</span>myWidget<span class="token operator">::</span>inputReverse<span class="token punctuation">[</span>tempCRC<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>checkBox_2<span class="token operator">-</span><span class="token operator">></span><span class="token function">setChecked</span><span class="token punctuation">(</span>myWidget<span class="token operator">::</span>outputReverse<span class="token punctuation">[</span>tempCRC<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>lineEdit_2<span class="token operator">-</span><span class="token operator">></span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>lineEdit_3<span class="token operator">-</span><span class="token operator">></span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>lineEdit_4<span class="token operator">-</span><span class="token operator">></span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>checkBox<span class="token operator">-</span><span class="token operator">></span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>checkBox_2<span class="token operator">-</span><span class="token operator">></span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><ul><li>点击清空响应事件。</li></ul><pre class=" language-cpp"><code class="language-cpp"><span class="token keyword">void</span> myWidget<span class="token operator">::</span><span class="token function">allClearEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>plainTextEdit<span class="token operator">-</span><span class="token operator">></span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>lineEdit<span class="token operator">-</span><span class="token operator">></span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ui<span class="token operator">-</span><span class="token operator">></span>comboBox<span class="token operator">-</span><span class="token operator">></span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><ul><li>复制事件，将得出的校验码复制到剪切板。</li></ul><pre class=" language-cpp"><code class="language-cpp"><span class="token keyword">void</span> myWidget<span class="token operator">::</span><span class="token function">copyCheckCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取系统剪切板指针</span>    QClipboard <span class="token operator">*</span>clipBoard <span class="token operator">=</span> QApplication<span class="token operator">::</span><span class="token function">clipboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    QString checkCode <span class="token operator">=</span> ui<span class="token operator">-</span><span class="token operator">></span>lineEdit<span class="token operator">-</span><span class="token operator">></span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    clipBoard<span class="token operator">-</span><span class="token operator">></span><span class="token function">setText</span><span class="token punctuation">(</span>checkCode<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><ul><li>CRC校验事件。</li></ul><pre class=" language-cpp"><code class="language-cpp"><span class="token keyword">void</span> myWidget<span class="token operator">::</span><span class="token function">crcCalculate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//判断输入数据和配置参数是否为空</span>    QString dataInput <span class="token operator">=</span> ui<span class="token operator">-</span><span class="token operator">></span>plainTextEdit<span class="token operator">-</span><span class="token operator">></span><span class="token function">toPlainText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    QString line2 <span class="token operator">=</span> ui<span class="token operator">-</span><span class="token operator">></span>lineEdit_2<span class="token operator">-</span><span class="token operator">></span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    QString line3 <span class="token operator">=</span> ui<span class="token operator">-</span><span class="token operator">></span>lineEdit_3<span class="token operator">-</span><span class="token operator">></span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    QString line4 <span class="token operator">=</span> ui<span class="token operator">-</span><span class="token operator">></span>lineEdit_4<span class="token operator">-</span><span class="token operator">></span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//判断输入数据格式</span>    <span class="token keyword">bool</span> isFormat <span class="token operator">=</span> dataInput<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token function">QRegExp</span><span class="token punctuation">(</span><span class="token string">"[^0-9a-fA-F\\s]+"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>isFormat <span class="token operator">||</span> dataInput<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        QMessageBox<span class="token operator">::</span><span class="token function">information</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>QString<span class="token operator">::</span><span class="token function">fromLocal8Bit</span><span class="token punctuation">(</span><span class="token string">"提示"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>QString<span class="token operator">::</span><span class="token function">fromLocal8Bit</span><span class="token punctuation">(</span><span class="token string">"输入数据格式不正确！"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">allClearEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//重置输入数据格式</span>        <span class="token comment" spellcheck="true">//qDebug()&lt;&lt;"原始输入数据："&lt;&lt;dataInput;</span>        QStringList tempDataList <span class="token operator">=</span> dataInput<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        QString tempData<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//去掉空格后拼接完整的字符串</span>        QString crcData16<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>tempDataList<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            tempData <span class="token operator">+</span><span class="token operator">=</span> tempDataList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        crcData16 <span class="token operator">=</span> tempData<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将字符串进行重新安排显示</span>        <span class="token keyword">int</span> crcDataLength <span class="token operator">=</span> tempData<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> m8 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> n8 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>m8<span class="token operator">&lt;</span>crcDataLength<span class="token number">-1</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            m8 <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>            tempData<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>m8<span class="token operator">+</span>n8<span class="token punctuation">,</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            n8 <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        tempData <span class="token operator">=</span> tempData<span class="token punctuation">.</span><span class="token function">simplified</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ui<span class="token operator">-</span><span class="token operator">></span>plainTextEdit<span class="token operator">-</span><span class="token operator">></span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ui<span class="token operator">-</span><span class="token operator">></span>plainTextEdit<span class="token operator">-</span><span class="token operator">></span><span class="token function">setPlainText</span><span class="token punctuation">(</span>tempData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将字符串进行重新安排显示</span>        <span class="token comment" spellcheck="true">//最大校验字节限制在1028个</span>        <span class="token comment" spellcheck="true">//CRC8校验</span>        QStringList dataList8 <span class="token operator">=</span> tempData<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">unsigned</span> <span class="token keyword">char</span> buf8<span class="token punctuation">[</span><span class="token number">1028</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>        QString temp1<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>dataList8<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            temp1 <span class="token operator">=</span> dataList8<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            buf8<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp1<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> tempCRC <span class="token operator">=</span> ui<span class="token operator">-</span><span class="token operator">></span>comboBox<span class="token operator">-</span><span class="token operator">></span><span class="token function">currentIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>tempCRC<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">CRC8</span><span class="token punctuation">(</span>buf8<span class="token punctuation">,</span>dataList8<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>tempCRC<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>tempCRC<span class="token operator">></span><span class="token number">12</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">CRC32</span><span class="token punctuation">(</span>buf8<span class="token punctuation">,</span>dataList8<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>tempCRC<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>tempCRC<span class="token operator">></span><span class="token number">3</span> <span class="token operator">&amp;</span> tempCRC<span class="token operator">&lt;</span><span class="token number">13</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">CRC16</span><span class="token punctuation">(</span>buf8<span class="token punctuation">,</span>dataList8<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>tempCRC<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="5-打包发布"><a href="#5-打包发布" class="headerlink" title="5.打包发布"></a>5.打包发布</h3><ul><li>将编译生成的exe文件拷贝到一个空文件夹，这时候打不开提示缺少qt核心库，这是因为qt动态链接库没被编译连接到，打开Qt的管理员终端，如下图所示。</li><li>cd到你刚才拷贝exe的文件夹位置，输入：windeployqt crcTools.exe，会自动将需要链接的文件拷贝到文件夹，之后便可以运行exe文件。</li></ul><p><img src="https://img-blog.csdnimg.cn/20200903233436488.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTU0OTE2MQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><hr style=" border:solid; width:100px; height:1px;" color="#000000" size="1&quot;"><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>该工具可以计算CRC8，CRC16以及CRC32位的数据校验码，欢迎大家评论、下载与转发，最后附上我的<a href="https://github.com/WandererYang">Github地址</a>，欢迎大家骚扰哈！</p></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> Qt </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
